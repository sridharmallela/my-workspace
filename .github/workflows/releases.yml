name: Package Publish

on:
  push:
    branches:
      - main

permissions:
  contents: write
  actions: write

jobs:
  npm_publish:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: |
          echo "Running npm install"
          npm ci

      - name: Setup Nx tasks
        uses: nrwl/nx-set-shas@v4

      - name: Run execution tasks
        run: npm run validate

      - name: Get last tag for comparision
        id: gitTag
        uses: ./.github/actions/git-tags

      - name: Check for Affected Projects
        id: checkForAffected
        uses: 2coo/action-nx-affected@v2
        with:
          base: ${{ steps.gitTag.output.currentTag }}

      - name: Publish Affected Projects
        if: steps.checkForAffected.outputs.hasAffected == 'true'
        uses: ./.github/actions/nx-publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}
          NPM_AUTH_TOKEN: ${{secrets.npm_token}}
        with:
          affectedProjects: ${{ steps.checkForAffected.outputs.affected }}

      - name: Create Tag
        uses: piszmog/create-tag@v1
        if: steps.checkForAffected.outputs.hasAffected == 'true'
        with:
          version: "${{ steps.gitTag.output.nextTag }}"
          message: "Release ${{ steps.gitTag.output.nextTag }}"
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        if: steps.checkForAffected.outputs.hasAffected == 'true'
        uses: dev-build-deploy/release-me@v0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          version: "${{ steps.gitTag.output.nextTag }}"
